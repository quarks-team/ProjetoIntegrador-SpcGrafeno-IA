name: Python CI Pipeline with Azure Deployment

# The pipeline will trigger on pushes to any branch, except main, and on pull requests to main
on:
  push:
    branches-ignore:
      - main  # Ignore direct pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the pipeline only for pull requests targeting the main branch
  workflow_dispatch: # Manual trigger for workflows

jobs:
  build:
    runs-on: ubuntu-latest  # Define that the pipeline will run in an Ubuntu environment

    steps:
      # First, check out the code from the repository
      - name: Check out the code
        uses: actions/checkout@v3

      # Set up Python with the latest stable version
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Use the latest stable version of Python

      # Install the dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip  # Upgrade pip
          pip install -r backendPython/requirements.txt  # Install project dependencies

      # Run unit tests and integration tests
      - name: Run tests
        run: |
          cd backendPython
          pytest --junitxml=results.xml  # Run tests with pytest and generate a report

      # Generate coverage report
      - name: Generate coverage report
        run: |
          pip install coverage  # Install the coverage library
          coverage run -m pytest  # Run tests for coverage
          coverage report -m  # Generate the coverage report
          coverage xml  # Export the report in XML for CI tools

      # If tests pass, the pipeline indicates success
      - name: Test and Coverage Passed
        if: success()
        run: echo "All tests passed, ready for merge!"

      # If any step fails, the pipeline will be blocked
      - name: Tests or Lint Failed
        if: failure()
        run: |
          echo "There were failures in the tests or linting."
          exit 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # Trigger deploy only on main branch
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # This is required for requesting the JWT

    steps:
      # Download artifact from build job (if you decide to create a zip for deployment)
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Unzip artifact for deployment
      - name: Unzip artifact for deployment
        run: unzip release.zip

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_CBF2DD4C72E24359BE3D9CABF42BB682 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_647D3E3A46B345479034447ED32C0767 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_E28204BC8E78421ABF9E700E60BB7F35 }}

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'quarksia'
          slot-name: 'Production'
